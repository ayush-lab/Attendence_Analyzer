"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.existColor = existColor;
exports.formatData = formatData;
exports.getDateToString = getDateToString;
exports.isValidDate = isValidDate;
exports.numberSort = numberSort;
exports.oneDayTime = void 0;
var oneDayTime = 24 * 60 * 60 * 1000;
exports.oneDayTime = oneDayTime;
function isValidDate(date) {
  return date instanceof Date && !isNaN(date.getTime());
}
function getDateToString(date) {
  return "".concat(date.getFullYear(), "/").concat(date.getMonth() + 1, "/").concat(date.getDate());
}
function formatData() {
  var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var result = {};
  data.forEach(function (item) {
    if (item.date && isValidDate(new Date(item.date))) {
      item.date = getDateToString(new Date(item.date));
      result[item.date] = item;
    }
  });
  return result;
}

/** 排序 比较函数 */
function numberSort() {
  var keys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  return keys.sort(function (x, y) {
    if (x < y) return -1;else if (x > y) return 1;
    return 0;
  });
}
function existColor() {
  var num = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  var nums = arguments.length > 1 ? arguments[1] : undefined;
  var panelColors = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var color = '';
  for (var a = 0; a < nums.length; a += 1) {
    if (nums[a] > num) {
      color = panelColors[nums[a]];
      break;
    }
    color = panelColors[nums[a]];
  }
  return color;
}
//# sourceMappingURL=utils.js.map