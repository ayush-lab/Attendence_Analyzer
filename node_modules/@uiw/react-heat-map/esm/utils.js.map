{
  "version": 3,
  "names": [
    "oneDayTime",
    "isValidDate",
    "date",
    "Date",
    "isNaN",
    "getTime",
    "getDateToString",
    "getFullYear",
    "getMonth",
    "getDate",
    "formatData",
    "data",
    "result",
    "forEach",
    "item",
    "numberSort",
    "keys",
    "sort",
    "x",
    "y",
    "existColor",
    "num",
    "nums",
    "panelColors",
    "color",
    "a",
    "length"
  ],
  "sources": [
    "../src/utils.ts"
  ],
  "sourcesContent": [
    "import { SVGProps, HeatMapValue } from './SVG';\n\nexport const oneDayTime = 24 * 60 * 60 * 1000;\n\nexport function isValidDate(date: Date) {\n  return date instanceof Date && !isNaN(date.getTime());\n}\n\nexport function getDateToString(date: Date) {\n  return `${date.getFullYear()}/${date.getMonth() + 1}/${date.getDate()}`;\n}\n\nexport function formatData(data: SVGProps['value'] = []) {\n  const result: Record<string, HeatMapValue> = {};\n  data.forEach((item) => {\n    if (item.date && isValidDate(new Date(item.date))) {\n      item.date = getDateToString(new Date(item.date));\n      result[item.date] = item;\n    }\n  });\n  return result;\n}\n\n/** 排序 比较函数 */\nexport function numberSort(keys: number[] = []) {\n  return keys.sort((x, y) => {\n    if (x < y) return -1;\n    else if (x > y) return 1;\n    return 0;\n  });\n}\n\nexport function existColor(num: number = 0, nums: number[], panelColors: Record<number, string> = {}) {\n  let color = '';\n  for (let a = 0; a < nums.length; a += 1) {\n    if (nums[a] > num) {\n      color = panelColors[nums[a]];\n      break;\n    }\n    color = panelColors[nums[a]];\n  }\n  return color;\n}\n"
  ],
  "mappings": "AAEA,OAAO,IAAMA,UAAU,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;AAE7C,OAAO,SAASC,WAAW,CAACC,IAAU,EAAE;EACtC,OAAOA,IAAI,YAAYC,IAAI,IAAI,CAACC,KAAK,CAACF,IAAI,CAACG,OAAO,EAAE,CAAC;AACvD;AAEA,OAAO,SAASC,eAAe,CAACJ,IAAU,EAAE;EAC1C,OAAUA,IAAI,CAACK,WAAW,EAAE,UAAIL,IAAI,CAACM,QAAQ,EAAE,GAAG,CAAC,UAAIN,IAAI,CAACO,OAAO,EAAE;AACvE;AAEA,OAAO,SAASC,UAAU,CAACC,IAAuB,EAAO;EAAA,IAA9BA,IAAuB;IAAvBA,IAAuB,GAAG,EAAE;EAAA;EACrD,IAAMC,MAAoC,GAAG,CAAC,CAAC;EAC/CD,IAAI,CAACE,OAAO,CAAEC,IAAI,IAAK;IACrB,IAAIA,IAAI,CAACZ,IAAI,IAAID,WAAW,CAAC,IAAIE,IAAI,CAACW,IAAI,CAACZ,IAAI,CAAC,CAAC,EAAE;MACjDY,IAAI,CAACZ,IAAI,GAAGI,eAAe,CAAC,IAAIH,IAAI,CAACW,IAAI,CAACZ,IAAI,CAAC,CAAC;MAChDU,MAAM,CAACE,IAAI,CAACZ,IAAI,CAAC,GAAGY,IAAI;IAC1B;EACF,CAAC,CAAC;EACF,OAAOF,MAAM;AACf;;AAEA;AACA,OAAO,SAASG,UAAU,CAACC,IAAc,EAAO;EAAA,IAArBA,IAAc;IAAdA,IAAc,GAAG,EAAE;EAAA;EAC5C,OAAOA,IAAI,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IACzB,IAAID,CAAC,GAAGC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,KAChB,IAAID,CAAC,GAAGC,CAAC,EAAE,OAAO,CAAC;IACxB,OAAO,CAAC;EACV,CAAC,CAAC;AACJ;AAEA,OAAO,SAASC,UAAU,CAACC,GAAW,EAAMC,IAAc,EAAEC,WAAmC,EAAO;EAAA,IAA3EF,GAAW;IAAXA,GAAW,GAAG,CAAC;EAAA;EAAA,IAAkBE,WAAmC;IAAnCA,WAAmC,GAAG,CAAC,CAAC;EAAA;EAClG,IAAIC,KAAK,GAAG,EAAE;EACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,IAAI,CAACI,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;IACvC,IAAIH,IAAI,CAACG,CAAC,CAAC,GAAGJ,GAAG,EAAE;MACjBG,KAAK,GAAGD,WAAW,CAACD,IAAI,CAACG,CAAC,CAAC,CAAC;MAC5B;IACF;IACAD,KAAK,GAAGD,WAAW,CAACD,IAAI,CAACG,CAAC,CAAC,CAAC;EAC9B;EACA,OAAOD,KAAK;AACd"
}