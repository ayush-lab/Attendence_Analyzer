{
  "version": 3,
  "sources": ["../src/components/TooltipController/TooltipController.tsx", "../src/components/Tooltip/Tooltip.tsx", "../src/utils/debounce.ts", "../src/components/TooltipProvider/TooltipProvider.tsx", "../src/components/TooltipProvider/TooltipWrapper.tsx", "../src/utils/use-isomorphic-layout-effect.ts", "../src/utils/compute-positions.ts", "esbuild-css-modules-plugin-namespace:./src/components/Tooltip/styles.module.css?esbuild-css-modules-plugin-building", "../src/components/TooltipContent/TooltipContent.tsx"],
  "sourcesContent": ["import { useEffect, useRef, useState } from 'react'\nimport { Tooltip } from 'components/Tooltip'\nimport type {\n  EventsType,\n  PositionStrategy,\n  PlacesType,\n  VariantType,\n  WrapperType,\n  DataAttribute,\n  ITooltip,\n  ChildrenType,\n} from 'components/Tooltip/TooltipTypes'\nimport { useTooltip } from 'components/TooltipProvider'\nimport { TooltipContent } from 'components/TooltipContent'\nimport type { ITooltipController } from './TooltipControllerTypes'\n\nconst TooltipController = ({\n  id,\n  anchorId,\n  anchorSelect,\n  content,\n  html,\n  render,\n  className,\n  classNameArrow,\n  variant = 'dark',\n  place = 'top',\n  offset = 10,\n  wrapper = 'div',\n  children = null,\n  events = ['hover'],\n  openOnClick = false,\n  positionStrategy = 'absolute',\n  middlewares,\n  delayShow = 0,\n  delayHide = 0,\n  float = false,\n  noArrow = false,\n  clickable = false,\n  closeOnEsc = false,\n  style,\n  position,\n  isOpen,\n  setIsOpen,\n  afterShow,\n  afterHide,\n}: ITooltipController) => {\n  const [tooltipContent, setTooltipContent] = useState(content)\n  const [tooltipHtml, setTooltipHtml] = useState(html)\n  const [tooltipPlace, setTooltipPlace] = useState(place)\n  const [tooltipVariant, setTooltipVariant] = useState(variant)\n  const [tooltipOffset, setTooltipOffset] = useState(offset)\n  const [tooltipDelayShow, setTooltipDelayShow] = useState(delayShow)\n  const [tooltipDelayHide, setTooltipDelayHide] = useState(delayHide)\n  const [tooltipFloat, setTooltipFloat] = useState(float)\n  const [tooltipWrapper, setTooltipWrapper] = useState<WrapperType>(wrapper)\n  const [tooltipEvents, setTooltipEvents] = useState(events)\n  const [tooltipPositionStrategy, setTooltipPositionStrategy] = useState(positionStrategy)\n  const [activeAnchor, setActiveAnchor] = useState<HTMLElement | null>(null)\n  /**\n   * @todo Remove this in a future version (provider/wrapper method is deprecated)\n   */\n  const { anchorRefs, activeAnchor: providerActiveAnchor } = useTooltip(id)\n\n  const getDataAttributesFromAnchorElement = (elementReference: HTMLElement) => {\n    const dataAttributes = elementReference?.getAttributeNames().reduce((acc, name) => {\n      if (name.startsWith('data-tooltip-')) {\n        const parsedAttribute = name.replace(/^data-tooltip-/, '') as DataAttribute\n        acc[parsedAttribute] = elementReference?.getAttribute(name) ?? null\n      }\n      return acc\n    }, {} as Record<DataAttribute, string | null>)\n\n    return dataAttributes\n  }\n\n  const applyAllDataAttributesFromAnchorElement = (\n    dataAttributes: Record<string, string | null>,\n  ) => {\n    const handleDataAttributes: Record<DataAttribute, (value: string | null) => void> = {\n      place: (value) => {\n        setTooltipPlace((value as PlacesType) ?? place)\n      },\n      content: (value) => {\n        setTooltipContent(value ?? content)\n      },\n      html: (value) => {\n        setTooltipHtml(value ?? html)\n      },\n      variant: (value) => {\n        setTooltipVariant((value as VariantType) ?? variant)\n      },\n      offset: (value) => {\n        setTooltipOffset(value === null ? offset : Number(value))\n      },\n      wrapper: (value) => {\n        setTooltipWrapper((value as WrapperType) ?? wrapper)\n      },\n      events: (value) => {\n        const parsed = value?.split(' ') as EventsType[]\n        setTooltipEvents(parsed ?? events)\n      },\n      'position-strategy': (value) => {\n        setTooltipPositionStrategy((value as PositionStrategy) ?? positionStrategy)\n      },\n      'delay-show': (value) => {\n        setTooltipDelayShow(value === null ? delayShow : Number(value))\n      },\n      'delay-hide': (value) => {\n        setTooltipDelayHide(value === null ? delayHide : Number(value))\n      },\n      float: (value) => {\n        setTooltipFloat(value === null ? float : value === 'true')\n      },\n    }\n    // reset unset data attributes to default values\n    // without this, data attributes from the last active anchor will still be used\n    Object.values(handleDataAttributes).forEach((handler) => handler(null))\n    Object.entries(dataAttributes).forEach(([key, value]) => {\n      handleDataAttributes[key as DataAttribute]?.(value)\n    })\n  }\n\n  useEffect(() => {\n    setTooltipContent(content)\n  }, [content])\n\n  useEffect(() => {\n    setTooltipHtml(html)\n  }, [html])\n\n  useEffect(() => {\n    setTooltipPlace(place)\n  }, [place])\n\n  useEffect(() => {\n    const elementRefs = new Set(anchorRefs)\n\n    let selector = anchorSelect\n    if (!selector && id) {\n      selector = `[data-tooltip-id='${id}']`\n    }\n    if (selector) {\n      try {\n        const anchorsBySelect = document.querySelectorAll<HTMLElement>(selector)\n        anchorsBySelect.forEach((anchor) => {\n          elementRefs.add({ current: anchor })\n        })\n      } catch {\n        if (!process.env.NODE_ENV || process.env.NODE_ENV !== 'production') {\n          // eslint-disable-next-line no-console\n          console.warn(`[react-tooltip] \"${anchorSelect}\" is not a valid CSS selector`)\n        }\n      }\n    }\n\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    if (anchorById) {\n      elementRefs.add({ current: anchorById })\n    }\n\n    if (!elementRefs.size) {\n      return () => null\n    }\n\n    const anchorElement = activeAnchor ?? anchorById ?? providerActiveAnchor.current\n\n    const observerCallback: MutationCallback = (mutationList) => {\n      mutationList.forEach((mutation) => {\n        if (\n          !anchorElement ||\n          mutation.type !== 'attributes' ||\n          !mutation.attributeName?.startsWith('data-tooltip-')\n        ) {\n          return\n        }\n        // make sure to get all set attributes, since all unset attributes are reset\n        const dataAttributes = getDataAttributesFromAnchorElement(anchorElement)\n        applyAllDataAttributesFromAnchorElement(dataAttributes)\n      })\n    }\n\n    // Create an observer instance linked to the callback function\n    const observer = new MutationObserver(observerCallback)\n\n    // do not check for subtree and childrens, we only want to know attribute changes\n    // to stay watching `data-attributes-*` from anchor element\n    const observerConfig = { attributes: true, childList: false, subtree: false }\n\n    if (anchorElement) {\n      const dataAttributes = getDataAttributesFromAnchorElement(anchorElement)\n      applyAllDataAttributesFromAnchorElement(dataAttributes)\n      // Start observing the target node for configured mutations\n      observer.observe(anchorElement, observerConfig)\n    }\n\n    return () => {\n      // Remove the observer when the tooltip is destroyed\n      observer.disconnect()\n    }\n  }, [anchorRefs, providerActiveAnchor, activeAnchor, anchorId, anchorSelect])\n\n  /**\n   * content priority: children < renderContent or content < html\n   * children should be lower priority so that it can be used as the \"default\" content\n   */\n  let renderedContent: ChildrenType = children\n  const contentWrapperRef = useRef<HTMLDivElement>(null)\n  if (render) {\n    renderedContent = (\n      <div ref={contentWrapperRef} className=\"react-tooltip-content-wrapper\">\n        {render({ content: tooltipContent ?? null, activeAnchor }) as React.ReactNode}\n      </div>\n    )\n  } else if (tooltipContent) {\n    renderedContent = tooltipContent\n  }\n  if (tooltipHtml) {\n    renderedContent = <TooltipContent content={tooltipHtml} />\n  }\n\n  const props: ITooltip = {\n    id,\n    anchorId,\n    anchorSelect,\n    className,\n    classNameArrow,\n    content: renderedContent,\n    contentWrapperRef,\n    place: tooltipPlace,\n    variant: tooltipVariant,\n    offset: tooltipOffset,\n    wrapper: tooltipWrapper,\n    events: tooltipEvents,\n    openOnClick,\n    positionStrategy: tooltipPositionStrategy,\n    middlewares,\n    delayShow: tooltipDelayShow,\n    delayHide: tooltipDelayHide,\n    float: tooltipFloat,\n    noArrow,\n    clickable,\n    closeOnEsc,\n    style,\n    position,\n    isOpen,\n    setIsOpen,\n    afterShow,\n    afterHide,\n    activeAnchor,\n    setActiveAnchor: (anchor: HTMLElement | null) => setActiveAnchor(anchor),\n  }\n\n  return <Tooltip {...props} />\n}\n\nexport default TooltipController\n", "import { useEffect, useState, useRef } from 'react'\nimport classNames from 'classnames'\nimport debounce from 'utils/debounce'\nimport { useTooltip } from 'components/TooltipProvider'\nimport useIsomorphicLayoutEffect from 'utils/use-isomorphic-layout-effect'\nimport { computeTooltipPosition } from '../../utils/compute-positions'\nimport styles from './styles.module.css'\nimport type { IPosition, ITooltip, PlacesType } from './TooltipTypes'\n\nconst Tooltip = ({\n  // props\n  id,\n  className,\n  classNameArrow,\n  variant = 'dark',\n  anchorId,\n  anchorSelect,\n  place = 'top',\n  offset = 10,\n  events = ['hover'],\n  openOnClick = false,\n  positionStrategy = 'absolute',\n  middlewares,\n  wrapper: WrapperElement,\n  delayShow = 0,\n  delayHide = 0,\n  float = false,\n  noArrow = false,\n  clickable = false,\n  closeOnEsc = false,\n  style: externalStyles,\n  position,\n  afterShow,\n  afterHide,\n  // props handled by controller\n  content,\n  contentWrapperRef,\n  isOpen,\n  setIsOpen,\n  activeAnchor,\n  setActiveAnchor,\n}: ITooltip) => {\n  const tooltipRef = useRef<HTMLElement>(null)\n  const tooltipArrowRef = useRef<HTMLElement>(null)\n  const tooltipShowDelayTimerRef = useRef<NodeJS.Timeout | null>(null)\n  const tooltipHideDelayTimerRef = useRef<NodeJS.Timeout | null>(null)\n  const [actualPlacement, setActualPlacement] = useState(place)\n  const [inlineStyles, setInlineStyles] = useState({})\n  const [inlineArrowStyles, setInlineArrowStyles] = useState({})\n  const [show, setShow] = useState(false)\n  const [rendered, setRendered] = useState(false)\n  const wasShowing = useRef(false)\n  const lastFloatPosition = useRef<IPosition | null>(null)\n  /**\n   * @todo Remove this in a future version (provider/wrapper method is deprecated)\n   */\n  const { anchorRefs, setActiveAnchor: setProviderActiveAnchor } = useTooltip(id)\n  const hoveringTooltip = useRef(false)\n  const [anchorsBySelect, setAnchorsBySelect] = useState<HTMLElement[]>([])\n  const mounted = useRef(false)\n\n  const shouldOpenOnClick = openOnClick || events.includes('click')\n\n  /**\n   * useLayoutEffect runs before useEffect,\n   * but should be used carefully because of caveats\n   * https://beta.reactjs.org/reference/react/useLayoutEffect#caveats\n   */\n  useIsomorphicLayoutEffect(() => {\n    mounted.current = true\n    return () => {\n      mounted.current = false\n    }\n  }, [])\n\n  useEffect(() => {\n    if (!show) {\n      /**\n       * this fixes weird behavior when switching between two anchor elements very quickly\n       * remove the timeout and switch quickly between two adjancent anchor elements to see it\n       *\n       * in practice, this means the tooltip is not immediately removed from the DOM on hide\n       */\n      const timeout = setTimeout(() => {\n        setRendered(false)\n      }, 150)\n      return () => {\n        clearTimeout(timeout)\n      }\n    }\n    return () => null\n  }, [show])\n\n  const handleShow = (value: boolean) => {\n    if (!mounted.current) {\n      return\n    }\n    if (value) {\n      setRendered(true)\n    }\n    /**\n     * wait for the component to render and calculate position\n     * before actually showing\n     */\n    setTimeout(() => {\n      if (!mounted.current) {\n        return\n      }\n      setIsOpen?.(value)\n      if (isOpen === undefined) {\n        setShow(value)\n      }\n    }, 10)\n  }\n\n  /**\n   * this replicates the effect from `handleShow()`\n   * when `isOpen` is changed from outside\n   */\n  useEffect(() => {\n    if (isOpen === undefined) {\n      return () => null\n    }\n    if (isOpen) {\n      setRendered(true)\n    }\n    const timeout = setTimeout(() => {\n      setShow(isOpen)\n    }, 10)\n    return () => {\n      clearTimeout(timeout)\n    }\n  }, [isOpen])\n\n  useEffect(() => {\n    if (show === wasShowing.current) {\n      return\n    }\n    wasShowing.current = show\n    if (show) {\n      afterShow?.()\n    } else {\n      afterHide?.()\n    }\n  }, [show])\n\n  const handleShowTooltipDelayed = () => {\n    if (tooltipShowDelayTimerRef.current) {\n      clearTimeout(tooltipShowDelayTimerRef.current)\n    }\n\n    tooltipShowDelayTimerRef.current = setTimeout(() => {\n      handleShow(true)\n    }, delayShow)\n  }\n\n  const handleHideTooltipDelayed = (delay = delayHide) => {\n    if (tooltipHideDelayTimerRef.current) {\n      clearTimeout(tooltipHideDelayTimerRef.current)\n    }\n\n    tooltipHideDelayTimerRef.current = setTimeout(() => {\n      if (hoveringTooltip.current) {\n        return\n      }\n      handleShow(false)\n    }, delay)\n  }\n\n  const handleShowTooltip = (event?: Event) => {\n    if (!event) {\n      return\n    }\n    if (delayShow) {\n      handleShowTooltipDelayed()\n    } else {\n      handleShow(true)\n    }\n    const target = event.currentTarget ?? event.target\n    setActiveAnchor(target as HTMLElement)\n    setProviderActiveAnchor({ current: target as HTMLElement })\n\n    if (tooltipHideDelayTimerRef.current) {\n      clearTimeout(tooltipHideDelayTimerRef.current)\n    }\n  }\n\n  const handleHideTooltip = () => {\n    if (clickable) {\n      // allow time for the mouse to reach the tooltip, in case there's a gap\n      handleHideTooltipDelayed(delayHide || 100)\n    } else if (delayHide) {\n      handleHideTooltipDelayed()\n    } else {\n      handleShow(false)\n    }\n\n    if (tooltipShowDelayTimerRef.current) {\n      clearTimeout(tooltipShowDelayTimerRef.current)\n    }\n  }\n\n  const handleTooltipPosition = ({ x, y }: IPosition) => {\n    const virtualElement = {\n      getBoundingClientRect() {\n        return {\n          x,\n          y,\n          width: 0,\n          height: 0,\n          top: y,\n          left: x,\n          right: x,\n          bottom: y,\n        }\n      },\n    } as Element\n    computeTooltipPosition({\n      place,\n      offset,\n      elementReference: virtualElement,\n      tooltipReference: tooltipRef.current,\n      tooltipArrowReference: tooltipArrowRef.current,\n      strategy: positionStrategy,\n      middlewares,\n    }).then((computedStylesData) => {\n      if (Object.keys(computedStylesData.tooltipStyles).length) {\n        setInlineStyles(computedStylesData.tooltipStyles)\n      }\n      if (Object.keys(computedStylesData.tooltipArrowStyles).length) {\n        setInlineArrowStyles(computedStylesData.tooltipArrowStyles)\n      }\n      setActualPlacement(computedStylesData.place as PlacesType)\n    })\n  }\n\n  const handleMouseMove = (event?: Event) => {\n    if (!event) {\n      return\n    }\n    const mouseEvent = event as MouseEvent\n    const mousePosition = {\n      x: mouseEvent.clientX,\n      y: mouseEvent.clientY,\n    }\n    handleTooltipPosition(mousePosition)\n    lastFloatPosition.current = mousePosition\n  }\n\n  const handleClickTooltipAnchor = (event?: Event) => {\n    handleShowTooltip(event)\n    if (delayHide) {\n      handleHideTooltipDelayed()\n    }\n  }\n\n  const handleClickOutsideAnchors = (event: MouseEvent) => {\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    const anchors = [anchorById, ...anchorsBySelect]\n    if (anchors.some((anchor) => anchor?.contains(event.target as HTMLElement))) {\n      return\n    }\n    if (tooltipRef.current?.contains(event.target as HTMLElement)) {\n      return\n    }\n    handleShow(false)\n  }\n\n  const handleEsc = (event: KeyboardEvent) => {\n    if (event.key !== 'Escape') {\n      return\n    }\n    handleShow(false)\n  }\n\n  // debounce handler to prevent call twice when\n  // mouse enter and focus events being triggered toggether\n  const debouncedHandleShowTooltip = debounce(handleShowTooltip, 50)\n  const debouncedHandleHideTooltip = debounce(handleHideTooltip, 50)\n\n  useEffect(() => {\n    const elementRefs = new Set(anchorRefs)\n\n    anchorsBySelect.forEach((anchor) => {\n      elementRefs.add({ current: anchor })\n    })\n\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    if (anchorById) {\n      elementRefs.add({ current: anchorById })\n    }\n\n    if (closeOnEsc) {\n      window.addEventListener('keydown', handleEsc)\n    }\n\n    const enabledEvents: { event: string; listener: (event?: Event) => void }[] = []\n\n    if (shouldOpenOnClick) {\n      window.addEventListener('click', handleClickOutsideAnchors)\n      enabledEvents.push({ event: 'click', listener: handleClickTooltipAnchor })\n    } else {\n      enabledEvents.push(\n        { event: 'mouseenter', listener: debouncedHandleShowTooltip },\n        { event: 'mouseleave', listener: debouncedHandleHideTooltip },\n        { event: 'focus', listener: debouncedHandleShowTooltip },\n        { event: 'blur', listener: debouncedHandleHideTooltip },\n      )\n      if (float) {\n        enabledEvents.push({\n          event: 'mousemove',\n          listener: handleMouseMove,\n        })\n      }\n    }\n\n    const handleMouseEnterTooltip = () => {\n      hoveringTooltip.current = true\n    }\n    const handleMouseLeaveTooltip = () => {\n      hoveringTooltip.current = false\n      handleHideTooltip()\n    }\n\n    if (clickable && !shouldOpenOnClick) {\n      tooltipRef.current?.addEventListener('mouseenter', handleMouseEnterTooltip)\n      tooltipRef.current?.addEventListener('mouseleave', handleMouseLeaveTooltip)\n    }\n\n    enabledEvents.forEach(({ event, listener }) => {\n      elementRefs.forEach((ref) => {\n        ref.current?.addEventListener(event, listener)\n      })\n    })\n\n    return () => {\n      if (shouldOpenOnClick) {\n        window.removeEventListener('click', handleClickOutsideAnchors)\n      }\n      if (closeOnEsc) {\n        window.removeEventListener('keydown', handleEsc)\n      }\n      if (clickable && !shouldOpenOnClick) {\n        tooltipRef.current?.removeEventListener('mouseenter', handleMouseEnterTooltip)\n        tooltipRef.current?.removeEventListener('mouseleave', handleMouseLeaveTooltip)\n      }\n      enabledEvents.forEach(({ event, listener }) => {\n        elementRefs.forEach((ref) => {\n          ref.current?.removeEventListener(event, listener)\n        })\n      })\n    }\n    /**\n     * rendered is also a dependency to ensure anchor observers are re-registered\n     * since `tooltipRef` becomes stale after removing/adding the tooltip to the DOM\n     */\n  }, [rendered, anchorRefs, anchorsBySelect, closeOnEsc, events])\n\n  useEffect(() => {\n    let selector = anchorSelect ?? ''\n    if (!selector && id) {\n      selector = `[data-tooltip-id='${id}']`\n    }\n    const documentObserverCallback: MutationCallback = (mutationList) => {\n      const newAnchors: HTMLElement[] = []\n      mutationList.forEach((mutation) => {\n        if (mutation.type === 'attributes' && mutation.attributeName === 'data-tooltip-id') {\n          const newId = (mutation.target as HTMLElement).getAttribute('data-tooltip-id')\n          if (newId === id) {\n            newAnchors.push(mutation.target as HTMLElement)\n          }\n        }\n        if (mutation.type !== 'childList') {\n          return\n        }\n        if (activeAnchor) {\n          ;[...mutation.removedNodes].some((node) => {\n            if (node?.contains?.(activeAnchor)) {\n              setRendered(false)\n              handleShow(false)\n              setActiveAnchor(null)\n              return true\n            }\n            return false\n          })\n        }\n        if (!selector) {\n          return\n        }\n        try {\n          const elements = [...mutation.addedNodes].filter((node) => node.nodeType === 1)\n          newAnchors.push(\n            // the element itself is an anchor\n            ...(elements.filter((element) =>\n              (element as HTMLElement).matches(selector),\n            ) as HTMLElement[]),\n          )\n          newAnchors.push(\n            // the element has children which are anchors\n            ...elements.flatMap(\n              (element) =>\n                [...(element as HTMLElement).querySelectorAll(selector)] as HTMLElement[],\n            ),\n          )\n        } catch {\n          /**\n           * invalid CSS selector.\n           * already warned on tooltip controller\n           */\n        }\n      })\n      if (newAnchors.length) {\n        setAnchorsBySelect((anchors) => [...anchors, ...newAnchors])\n      }\n    }\n    const documentObserver = new MutationObserver(documentObserverCallback)\n    // watch for anchor being removed from the DOM\n    documentObserver.observe(document.body, {\n      childList: true,\n      subtree: true,\n      attributes: true,\n      attributeFilter: ['data-tooltip-id'],\n    })\n    return () => {\n      documentObserver.disconnect()\n    }\n  }, [id, anchorSelect, activeAnchor])\n\n  const updateTooltipPosition = () => {\n    if (position) {\n      // if `position` is set, override regular and `float` positioning\n      handleTooltipPosition(position)\n      return\n    }\n\n    if (float) {\n      if (lastFloatPosition.current) {\n        /*\n          Without this, changes to `content`, `place`, `offset`, ..., will only\n          trigger a position calculation after a `mousemove` event.\n\n          To see why this matters, comment this line, run `yarn dev` and click the\n          \"Hover me!\" anchor.\n        */\n        handleTooltipPosition(lastFloatPosition.current)\n      }\n      // if `float` is set, override regular positioning\n      return\n    }\n\n    computeTooltipPosition({\n      place,\n      offset,\n      elementReference: activeAnchor,\n      tooltipReference: tooltipRef.current,\n      tooltipArrowReference: tooltipArrowRef.current,\n      strategy: positionStrategy,\n      middlewares,\n    }).then((computedStylesData) => {\n      if (!mounted.current) {\n        // invalidate computed positions after remount\n        return\n      }\n      if (Object.keys(computedStylesData.tooltipStyles).length) {\n        setInlineStyles(computedStylesData.tooltipStyles)\n      }\n      if (Object.keys(computedStylesData.tooltipArrowStyles).length) {\n        setInlineArrowStyles(computedStylesData.tooltipArrowStyles)\n      }\n      setActualPlacement(computedStylesData.place as PlacesType)\n    })\n  }\n\n  useEffect(() => {\n    updateTooltipPosition()\n  }, [show, activeAnchor, content, externalStyles, place, offset, positionStrategy, position])\n\n  useEffect(() => {\n    if (!contentWrapperRef?.current) {\n      return () => null\n    }\n    const contentObserver = new ResizeObserver(() => {\n      updateTooltipPosition()\n    })\n    contentObserver.observe(contentWrapperRef.current)\n    return () => {\n      contentObserver.disconnect()\n    }\n  }, [content, contentWrapperRef?.current])\n\n  useEffect(() => {\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    const anchors = [...anchorsBySelect, anchorById]\n    if (!activeAnchor || !anchors.includes(activeAnchor)) {\n      /**\n       * if there is no active anchor,\n       * or if the current active anchor is not amongst the allowed ones,\n       * reset it\n       */\n      setActiveAnchor(anchorsBySelect[0] ?? anchorById)\n    }\n  }, [anchorId, anchorsBySelect, activeAnchor])\n\n  useEffect(() => {\n    return () => {\n      if (tooltipShowDelayTimerRef.current) {\n        clearTimeout(tooltipShowDelayTimerRef.current)\n      }\n      if (tooltipHideDelayTimerRef.current) {\n        clearTimeout(tooltipHideDelayTimerRef.current)\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    let selector = anchorSelect\n    if (!selector && id) {\n      selector = `[data-tooltip-id='${id}']`\n    }\n    if (!selector) {\n      return\n    }\n    try {\n      const anchors = Array.from(document.querySelectorAll<HTMLElement>(selector))\n      setAnchorsBySelect(anchors)\n    } catch {\n      // warning was already issued in the controller\n      setAnchorsBySelect([])\n    }\n  }, [id, anchorSelect])\n\n  const canShow = content && show && Object.keys(inlineStyles).length > 0\n\n  return rendered ? (\n    <WrapperElement\n      id={id}\n      role=\"tooltip\"\n      className={classNames(\n        'react-tooltip',\n        styles['tooltip'],\n        styles[variant],\n        className,\n        `react-tooltip__place-${actualPlacement}`,\n        {\n          [styles['show']]: canShow,\n          [styles['fixed']]: positionStrategy === 'fixed',\n          [styles['clickable']]: clickable,\n        },\n      )}\n      style={{ ...externalStyles, ...inlineStyles }}\n      ref={tooltipRef}\n    >\n      {content}\n      <WrapperElement\n        className={classNames('react-tooltip-arrow', styles['arrow'], classNameArrow, {\n          /**\n           * changed from dash `no-arrow` to camelcase because of:\n           * https://github.com/indooorsman/esbuild-css-modules-plugin/issues/42\n           */\n          [styles['noArrow']]: noArrow,\n        })}\n        style={inlineArrowStyles}\n        ref={tooltipArrowRef}\n      />\n    </WrapperElement>\n  ) : null\n}\n\nexport default Tooltip\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * This function debounce the received function\n * @param { function } \tfunc\t\t\t\tFunction to be debounced\n * @param { number } \t\twait\t\t\t\tTime to wait before execut the function\n * @param { boolean } \timmediate\t\tParam to define if the function will be executed immediately\n */\nconst debounce = (func: (...args: any[]) => void, wait?: number, immediate?: true) => {\n  let timeout: NodeJS.Timeout | null = null\n\n  return function debounced(this: typeof func, ...args: any[]) {\n    const later = () => {\n      timeout = null\n      if (!immediate) {\n        func.apply(this, args)\n      }\n    }\n\n    if (timeout) {\n      clearTimeout(timeout)\n    }\n\n    timeout = setTimeout(later, wait)\n  }\n}\n\nexport default debounce\n", "import React, {\n  createContext,\n  PropsWithChildren,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n} from 'react'\n\nimport type {\n  AnchorRef,\n  TooltipContextData,\n  TooltipContextDataWrapper,\n} from './TooltipProviderTypes'\n\nconst DEFAULT_TOOLTIP_ID = 'DEFAULT_TOOLTIP_ID'\nconst DEFAULT_CONTEXT_DATA: TooltipContextData = {\n  anchorRefs: new Set(),\n  activeAnchor: { current: null },\n  attach: () => {\n    /* attach anchor element */\n  },\n  detach: () => {\n    /* detach anchor element */\n  },\n  setActiveAnchor: () => {\n    /* set active anchor */\n  },\n}\n\nconst DEFAULT_CONTEXT_DATA_WRAPPER: TooltipContextDataWrapper = {\n  getTooltipData: () => DEFAULT_CONTEXT_DATA,\n}\n\nconst TooltipContext = createContext<TooltipContextDataWrapper>(DEFAULT_CONTEXT_DATA_WRAPPER)\n\n/**\n * @deprecated Use the `data-tooltip-id` attribute, or the `anchorSelect` prop instead.\n * See https://react-tooltip.com/docs/getting-started\n */\nconst TooltipProvider: React.FC<PropsWithChildren<void>> = ({ children }) => {\n  const [anchorRefMap, setAnchorRefMap] = useState<Record<string, Set<AnchorRef>>>({\n    [DEFAULT_TOOLTIP_ID]: new Set(),\n  })\n  const [activeAnchorMap, setActiveAnchorMap] = useState<Record<string, AnchorRef>>({\n    [DEFAULT_TOOLTIP_ID]: { current: null },\n  })\n\n  const attach = (tooltipId: string, ...refs: AnchorRef[]) => {\n    setAnchorRefMap((oldMap) => {\n      const tooltipRefs = oldMap[tooltipId] ?? new Set()\n      refs.forEach((ref) => tooltipRefs.add(ref))\n      // create new object to trigger re-render\n      return { ...oldMap, [tooltipId]: new Set(tooltipRefs) }\n    })\n  }\n\n  const detach = (tooltipId: string, ...refs: AnchorRef[]) => {\n    setAnchorRefMap((oldMap) => {\n      const tooltipRefs = oldMap[tooltipId]\n      if (!tooltipRefs) {\n        // tooltip not found\n        // maybe thow error?\n        return oldMap\n      }\n      refs.forEach((ref) => tooltipRefs.delete(ref))\n      // create new object to trigger re-render\n      return { ...oldMap }\n    })\n  }\n\n  const setActiveAnchor = (tooltipId: string, ref: React.RefObject<HTMLElement>) => {\n    setActiveAnchorMap((oldMap) => {\n      if (oldMap[tooltipId]?.current === ref.current) {\n        return oldMap\n      }\n      // create new object to trigger re-render\n      return { ...oldMap, [tooltipId]: ref }\n    })\n  }\n\n  const getTooltipData = useCallback(\n    (tooltipId = DEFAULT_TOOLTIP_ID) => ({\n      anchorRefs: anchorRefMap[tooltipId] ?? new Set(),\n      activeAnchor: activeAnchorMap[tooltipId] ?? { current: null },\n      attach: (...refs: AnchorRef[]) => attach(tooltipId, ...refs),\n      detach: (...refs: AnchorRef[]) => detach(tooltipId, ...refs),\n      setActiveAnchor: (ref: AnchorRef) => setActiveAnchor(tooltipId, ref),\n    }),\n    [anchorRefMap, activeAnchorMap, attach, detach],\n  )\n\n  const context = useMemo(() => {\n    return {\n      getTooltipData,\n    }\n  }, [getTooltipData])\n\n  return <TooltipContext.Provider value={context}>{children}</TooltipContext.Provider>\n}\n\nexport function useTooltip(tooltipId = DEFAULT_TOOLTIP_ID) {\n  return useContext(TooltipContext).getTooltipData(tooltipId)\n}\n\nexport default TooltipProvider\n", "import { useEffect, useRef } from 'react'\nimport classNames from 'classnames'\nimport { useTooltip } from './TooltipProvider'\nimport type { ITooltipWrapper } from './TooltipProviderTypes'\n\n/**\n * @deprecated Use the `data-tooltip-id` attribute, or the `anchorSelect` prop instead.\n * See https://react-tooltip.com/docs/getting-started\n */\nconst TooltipWrapper = ({\n  tooltipId,\n  children,\n  className,\n  place,\n  content,\n  html,\n  variant,\n  offset,\n  wrapper,\n  events,\n  positionStrategy,\n  delayShow,\n  delayHide,\n}: ITooltipWrapper) => {\n  const { attach, detach } = useTooltip(tooltipId)\n  const anchorRef = useRef<HTMLElement | null>(null)\n\n  useEffect(() => {\n    attach(anchorRef)\n    return () => {\n      detach(anchorRef)\n    }\n  }, [])\n\n  return (\n    <span\n      ref={anchorRef}\n      className={classNames('react-tooltip-wrapper', className)}\n      data-tooltip-place={place}\n      data-tooltip-content={content}\n      data-tooltip-html={html}\n      data-tooltip-variant={variant}\n      data-tooltip-offset={offset}\n      data-tooltip-wrapper={wrapper}\n      data-tooltip-events={events}\n      data-tooltip-position-strategy={positionStrategy}\n      data-tooltip-delay-show={delayShow}\n      data-tooltip-delay-hide={delayHide}\n    >\n      {children}\n    </span>\n  )\n}\n\nexport default TooltipWrapper\n", "import { useLayoutEffect, useEffect } from 'react'\n\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect\n\nexport default useIsomorphicLayoutEffect\n", "import { computePosition, offset, shift, arrow, flip } from '@floating-ui/dom'\nimport type { IComputePositions } from './compute-positions-types'\n\nexport const computeTooltipPosition = async ({\n  elementReference = null,\n  tooltipReference = null,\n  tooltipArrowReference = null,\n  place = 'top',\n  offset: offsetValue = 10,\n  strategy = 'absolute',\n  middlewares = [offset(Number(offsetValue)), flip(), shift({ padding: 5 })],\n}: IComputePositions) => {\n  if (!elementReference) {\n    // elementReference can be null or undefined and we will not compute the position\n    // eslint-disable-next-line no-console\n    // console.error('The reference element for tooltip was not defined: ', elementReference)\n    return { tooltipStyles: {}, tooltipArrowStyles: {}, place }\n  }\n\n  if (tooltipReference === null) {\n    return { tooltipStyles: {}, tooltipArrowStyles: {}, place }\n  }\n\n  const middleware = middlewares\n\n  if (tooltipArrowReference) {\n    middleware.push(arrow({ element: tooltipArrowReference as HTMLElement, padding: 5 }))\n\n    return computePosition(elementReference as HTMLElement, tooltipReference as HTMLElement, {\n      placement: place,\n      strategy,\n      middleware,\n    }).then(({ x, y, placement, middlewareData }) => {\n      const styles = { left: `${x}px`, top: `${y}px` }\n\n      const { x: arrowX, y: arrowY } = middlewareData.arrow ?? { x: 0, y: 0 }\n\n      const staticSide =\n        {\n          top: 'bottom',\n          right: 'left',\n          bottom: 'top',\n          left: 'right',\n        }[placement.split('-')[0]] ?? 'bottom'\n\n      const arrowStyle = {\n        left: arrowX != null ? `${arrowX}px` : '',\n        top: arrowY != null ? `${arrowY}px` : '',\n        right: '',\n        bottom: '',\n        [staticSide]: '-4px',\n      }\n\n      return { tooltipStyles: styles, tooltipArrowStyles: arrowStyle, place: placement }\n    })\n  }\n\n  return computePosition(elementReference as HTMLElement, tooltipReference as HTMLElement, {\n    placement: 'bottom',\n    strategy,\n    middleware,\n  }).then(({ x, y, placement }) => {\n    const styles = { left: `${x}px`, top: `${y}px` }\n\n    return { tooltipStyles: styles, tooltipArrowStyles: {}, place: placement }\n  })\n}\n", "import \"./styles.module.css?esbuild-css-modules-plugin-built\";\nexport default {\"arrow\":\"react-tooltip__arrow_KtSkBq\",\"clickable\":\"react-tooltip__clickable_KtSkBq\",\"dark\":\"react-tooltip__dark_KtSkBq\",\"error\":\"react-tooltip__error_KtSkBq\",\"fixed\":\"react-tooltip__fixed_KtSkBq\",\"info\":\"react-tooltip__info_KtSkBq\",\"light\":\"react-tooltip__light_KtSkBq\",\"noArrow\":\"react-tooltip__no-arrow_KtSkBq\",\"show\":\"react-tooltip__show_KtSkBq\",\"success\":\"react-tooltip__success_KtSkBq\",\"tooltip\":\"react-tooltip__tooltip_KtSkBq\",\"warning\":\"react-tooltip__warning_KtSkBq\"};;\nexport const arrow = \"react-tooltip__arrow_KtSkBq\";\nexport const clickable = \"react-tooltip__clickable_KtSkBq\";\nexport const dark = \"react-tooltip__dark_KtSkBq\";\nexport const error = \"react-tooltip__error_KtSkBq\";\nexport const fixed = \"react-tooltip__fixed_KtSkBq\";\nexport const info = \"react-tooltip__info_KtSkBq\";\nexport const light = \"react-tooltip__light_KtSkBq\";\nexport const noArrow = \"react-tooltip__no-arrow_KtSkBq\";\nexport const show = \"react-tooltip__show_KtSkBq\";\nexport const success = \"react-tooltip__success_KtSkBq\";\nexport const tooltip = \"react-tooltip__tooltip_KtSkBq\";\nexport const warning = \"react-tooltip__warning_KtSkBq\";", "/* eslint-disable react/no-danger */\nimport type { ITooltipContent } from './TooltipContentTypes'\n\nconst TooltipContent = ({ content }: ITooltipContent) => {\n  return <span dangerouslySetInnerHTML={{ __html: content }} />\n}\n\nexport default TooltipContent\n"],
  "mappings": "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",
  "names": ["useEffect", "useRef", "useState", "useEffect", "useState", "useRef", "classNames", "debounce", "func", "wait", "immediate", "timeout", "args", "later", "debounce_default", "createContext", "useCallback", "useContext", "useMemo", "useState", "jsx", "DEFAULT_TOOLTIP_ID", "DEFAULT_CONTEXT_DATA", "DEFAULT_CONTEXT_DATA_WRAPPER", "TooltipContext", "TooltipProvider", "children", "anchorRefMap", "setAnchorRefMap", "activeAnchorMap", "setActiveAnchorMap", "attach", "tooltipId", "refs", "oldMap", "_a", "tooltipRefs", "ref", "detach", "setActiveAnchor", "getTooltipData", "_b", "context", "useTooltip", "TooltipProvider_default", "useEffect", "useRef", "classNames", "jsx", "TooltipWrapper", "tooltipId", "children", "className", "place", "content", "html", "variant", "offset", "wrapper", "events", "positionStrategy", "delayShow", "delayHide", "attach", "detach", "useTooltip", "anchorRef", "useRef", "useEffect", "classNames", "TooltipWrapper_default", "useLayoutEffect", "useEffect", "useIsomorphicLayoutEffect", "use_isomorphic_layout_effect_default", "computePosition", "offset", "shift", "arrow", "flip", "computeTooltipPosition", "elementReference", "tooltipReference", "tooltipArrowReference", "place", "offsetValue", "strategy", "middlewares", "middleware", "x", "y", "placement", "middlewareData", "_a", "_b", "styles", "arrowX", "arrowY", "staticSide", "arrowStyle", "styles_module_default", "jsx", "jsxs", "Tooltip", "id", "className", "classNameArrow", "variant", "anchorId", "anchorSelect", "place", "offset", "events", "openOnClick", "positionStrategy", "middlewares", "WrapperElement", "delayShow", "delayHide", "float", "noArrow", "clickable", "closeOnEsc", "externalStyles", "position", "afterShow", "afterHide", "content", "contentWrapperRef", "isOpen", "setIsOpen", "activeAnchor", "setActiveAnchor", "tooltipRef", "useRef", "tooltipArrowRef", "tooltipShowDelayTimerRef", "tooltipHideDelayTimerRef", "actualPlacement", "setActualPlacement", "useState", "inlineStyles", "setInlineStyles", "inlineArrowStyles", "setInlineArrowStyles", "show", "setShow", "rendered", "setRendered", "wasShowing", "lastFloatPosition", "anchorRefs", "setProviderActiveAnchor", "useTooltip", "hoveringTooltip", "anchorsBySelect", "setAnchorsBySelect", "mounted", "shouldOpenOnClick", "use_isomorphic_layout_effect_default", "useEffect", "timeout", "handleShow", "value", "handleShowTooltipDelayed", "handleHideTooltipDelayed", "delay", "handleShowTooltip", "event", "_a", "target", "handleHideTooltip", "handleTooltipPosition", "x", "y", "computeTooltipPosition", "computedStylesData", "handleMouseMove", "mouseEvent", "mousePosition", "handleClickTooltipAnchor", "handleClickOutsideAnchors", "anchor", "handleEsc", "debouncedHandleShowTooltip", "debounce_default", "debouncedHandleHideTooltip", "_b", "elementRefs", "anchorById", "enabledEvents", "handleMouseEnterTooltip", "handleMouseLeaveTooltip", "listener", "ref", "selector", "documentObserverCallback", "mutationList", "newAnchors", "mutation", "node", "elements", "element", "e", "anchors", "documentObserver", "updateTooltipPosition", "contentObserver", "canShow", "classNames", "styles_module_default", "Tooltip_default", "jsx", "TooltipContent", "content", "TooltipContent_default", "jsx", "TooltipController", "id", "anchorId", "anchorSelect", "content", "html", "render", "className", "classNameArrow", "variant", "place", "offset", "wrapper", "children", "events", "openOnClick", "positionStrategy", "middlewares", "delayShow", "delayHide", "float", "noArrow", "clickable", "closeOnEsc", "style", "position", "isOpen", "setIsOpen", "afterShow", "afterHide", "tooltipContent", "setTooltipContent", "useState", "tooltipHtml", "setTooltipHtml", "tooltipPlace", "setTooltipPlace", "tooltipVariant", "setTooltipVariant", "tooltipOffset", "setTooltipOffset", "tooltipDelayShow", "setTooltipDelayShow", "tooltipDelayHide", "setTooltipDelayHide", "tooltipFloat", "setTooltipFloat", "tooltipWrapper", "setTooltipWrapper", "tooltipEvents", "setTooltipEvents", "tooltipPositionStrategy", "setTooltipPositionStrategy", "activeAnchor", "setActiveAnchor", "anchorRefs", "providerActiveAnchor", "useTooltip", "getDataAttributesFromAnchorElement", "elementReference", "acc", "name", "_a", "parsedAttribute", "applyAllDataAttributesFromAnchorElement", "dataAttributes", "handleDataAttributes", "value", "parsed", "handler", "key", "useEffect", "elementRefs", "selector", "anchor", "e", "anchorById", "anchorElement", "observerCallback", "mutationList", "mutation", "observer", "observerConfig", "renderedContent", "contentWrapperRef", "useRef", "TooltipContent_default", "Tooltip_default", "TooltipController_default"]
}
